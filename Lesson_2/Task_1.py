"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.
Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.
Подсказка:
Постарайтесь решить задачу двумя способами:
1. Через цикл
Вариант исполнения: в бесконечном цикле запрашивайте вид операции, например, +, - или *
Проверяйте вид операции и запускайте соответствующую команду
Предусмотрите выход из бесконечного цикла
2. Рекурсией.
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, /
- условие завершения рекурсии - введена операция 0
Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 45
Введите второе число: 56
Результат 45 + 56 = 101
Введите операцию (+, -, *, / или 0 для выхода): rth
Неверная операция. Повторите ввод
Введите операцию (+, -, *, / или 0 для выхода):
ЗДЕСЬ ДОЛЖНА БЫТЬ РЕАЛИЗАЦИЯ ЧЕРЕЗ ЦИКЛ
"""

print("Простой калькулятор на Python")
while True:
    oper = input("Введите операцию(/,*,-,+,0 - для выхода), которую хотите выполнить с числами: ")
    if oper == 0:
        break
    if oper == '/' or oper == '*' or oper == '-' or oper == '+':
        x = float(input("Введите первое число: "))
        y = float(input("Введите второе число: "))
        if oper == '/':
            try:
                print(f'{x / y:.2f}')
            except ZeroDivisionError:
                print("На ноль делить нельзя!!!")
        elif oper == '*':
            print(f'{x * y:.2f}')
        elif oper == '-':
            print(f'{x - y:.2f}')
        elif oper == '+':
            print(f'{x + y:.2f}')
    else:
        print("Неверный знак операции:")
